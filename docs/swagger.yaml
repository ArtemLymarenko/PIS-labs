basePath: /api/v1
definitions:
  dto.AuthResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  dto.CreateProjectRequest:
    properties:
      description:
        type: string
      name:
        type: string
      productionEndAt:
        type: string
      productionStartAt:
        type: string
      status:
        type: string
    type: object
  dto.CreateTaskRequest:
    properties:
      description:
        type: string
      name:
        type: string
      projectId:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.ProjectResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      productionEndAt:
        type: string
      productionStartAt:
        type: string
      status:
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    type: object
  dto.ResponseErr:
    properties:
      message:
        type: string
    type: object
  dto.TaskResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      projectId:
        type: string
    type: object
  dto.UpdateProjectRequest:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      productionEndAt:
        type: string
      productionStartAt:
        type: string
      status:
        type: string
    type: object
  dto.UpdateTaskRequest:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      projectId:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact: {}
  description: This is a sample server Project Management System server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Project Management System API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: User login with provided credentials
      parameters:
      - description: User login credentials
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            $ref: '#/definitions/dto.AuthResponse'
        "400":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      summary: User login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: User registration with required information
      parameters:
      - description: User registration details
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully registered
          schema:
            $ref: '#/definitions/dto.AuthResponse'
        "400":
          description: Invalid data
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      summary: User registration
      tags:
      - auth
  /projects:
    post:
      consumes:
      - application/json
      description: post project
      parameters:
      - description: project data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      security:
      - BearerAuth: []
      summary: Creates new project by id
      tags:
      - projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: delete project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      security:
      - BearerAuth: []
      summary: Deletes project by id
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: get project by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      security:
      - BearerAuth: []
      summary: Getting project by id
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: put project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: project data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      security:
      - BearerAuth: []
      summary: Updates project by id
      tags:
      - projects
  /tasks:
    post:
      consumes:
      - application/json
      description: Create a task with the provided data
      parameters:
      - description: Task data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Task created successfully
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Invalid task data
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      security:
      - BearerAuth: []
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task using its unique ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task deleted successfully
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      security:
      - BearerAuth: []
      summary: Delete task by ID
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Retrieve a task by its unique ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task details
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      security:
      - BearerAuth: []
      summary: Get task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update a task's information by its ID
      parameters:
      - description: Updated task data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Task updated successfully
          schema:
            $ref: '#/definitions/dto.TaskResponse'
        "400":
          description: Invalid task data
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/dto.ResponseErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ResponseErr'
      security:
      - BearerAuth: []
      summary: Update an existing task
      tags:
      - tasks
swagger: "2.0"
